#Project 1

def calculate_tax(income):
  
  tax_rate = 0.2  
  tax = income * tax_rate
  return tax

def main():
  income = float(input("Enter your income: "))
  tax = calculate_tax(income)

  
  rounded_tax = round(tax, 2)
  formatted_tax = "{:.2f}".format(rounded_tax)  

  print(f"Your calculated tax is: ${formatted_tax}")

if __name__ == "__main__":
  main()
------------------------------------------------------------
#Project 7

def years_to_minutes(years):
   
  days = years * 365
  minutes_per_day = 24 * 60  
  total_minutes = days * minutes_per_day

  return total_minutes

def main():
  

  years = float(input("Enter the number of years: "))
  total_minutes = years_to_minutes(years)

  print(f"{years} years is equal to approximately {total_minutes:.2f} minutes.")

if __name__ == "__main__":
  main()
----------------------------------------------------------------
#Project 10

def calculate_weekly_pay(hourly_wage, regular_hours, overtime_hours):
   
  regular_pay = hourly_wage * regular_hours

  overtime_pay = overtime_hours * (hourly_wage * 1.5)

  total_pay = regular_pay + overtime_pay

  return total_pay

def main():

  try:
    hourly_wage = float(input("Enter the hourly wage: "))
    regular_hours = float(input("Enter the total regular hours: "))
    overtime_hours = float(input("Enter the total overtime Â  hours:"))

    if hourly_wage <= 0 or regular_hours < 0 or overtime_hours < 0:
      raise ValueError("Input values must be positive.")

    total_pay = calculate_weekly_pay(hourly_wage, regular_hours, overtime_hours)
    print(f"The employee's total weekly pay is: ${total_pay:.2f}")

  except ValueError as e:
    print("Error: Invalid input. Please enter positive values for wage and hours.")

if __name__ == "__main__":
  main()
----------------------------------------------------------------------------------------
